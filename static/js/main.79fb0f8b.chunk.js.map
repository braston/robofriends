{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACQ,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,kBACZC,SAAUJ,OCKfK,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKP,UAAU,qDAAqDO,GAAIA,EAAxE,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLI,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIpB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAE,EAAF,CAEIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCFdC,G,MARA,SAACC,GACZ,OACO,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCkBPC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAU,CACXJ,UAAU,M,oBAIlB,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAlBCQ,aCiDZC,E,kDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAU,CACZK,YAAaD,EAAME,OAAOC,SAd7B,EAAKZ,MAAQ,CACTZ,OAAQ,GACRsB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OACjBG,MAAM,8CACJ5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAACjB,OAAQ4B,S,oBAS1C,WACI,MAAgCZ,KAAKJ,MAA7BZ,EAAR,EAAQA,OAAQsB,EAAhB,EAAgBA,YACVO,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASX,EAAYU,kBAG3D,OAAQhC,EAAOkC,OAEL,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAE,EAAF,CAAYD,aAAc4B,KAAKI,iBAC/B,cAAE,EAAF,UACI,cAAE,EAAF,UACI,cAAE,EAAF,CAAWpB,OAAQ6B,WANnC,gD,GA5BMX,aCDlBiB,IAASC,OACT,cAAE,EAAF,IAEEC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.79fb0f8b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n            <div className='pa2'>\r\n                <input \r\n                    className='pa3 ba b--green bg-lightest-blue'\r\n                    type='search' \r\n                    placeholder='Search Robots..'\r\n                    onChange={searchChange}>\r\n                </input>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5' id={id}>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {   \r\n    // if(true){\r\n    //     throw new Error('CardList Failed!');\r\n    // }   \r\nreturn (\r\n    <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                    < Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}/>\r\n                    );\r\n            })\r\n        }\r\n  </div>\r\n);\r\n}\r\n\r\nexport default CardList;","\r\nimport React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n           <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n               {props.children}\r\n           </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState ({\r\n            hasError: true\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1> There's Been an Error!</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React, {Component} from 'react';\r\nimport 'tachyons';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: '',    \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState ({\r\n           searchField: event.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n\r\n      return !robots.length ?\r\n            <h1>Loading...</h1> : (\r\n                <div className='tc'>\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    < SearchBox searchChange={this.onSearchChange}/>\r\n                    < Scroll>\r\n                        < ErrorBoundry >\r\n                            < CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>    \r\n            )\r\n        }\r\n    };\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\n\nReactDOM.render(\n< App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}